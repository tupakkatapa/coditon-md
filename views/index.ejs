<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <title><%= title %></title>

    <link rel="stylesheet" href="/base.css">
    <link rel="stylesheet" href="/sidebar.css">
    <link rel="stylesheet" href="/dark-theme.css">
    <link rel="stylesheet" href="/markdown.css">
    <link rel="stylesheet" href="/mobile.css">

    <link rel="preload" href="/profile-pic" as="image">
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" id="highlightjs-light" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github.min.css">
    <link rel="stylesheet" id="highlightjs-dark" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github-dark.min.css" disabled>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
</head>

<body>
    <div class="container">
        <div class="sidebar">
            <div class="sidebar-content">
                <div class="image-container">
                  <% if (image) { %>
                      <img src="/profile-pic" alt="Profile Image">
                  <% } %>
                </div>
                <h1>~ <%= name %></h1>
                <div class="navigation-buttons">
                    <%- folderStructure %>
                </div>
                <button class="arrow-btn" id="collapseSidebar">‚ü®</button>
            </div>
        </div>
        <div class="main">
            <div id="file-content" class="markdown-body">
                <%- initialContent %>
                <div class="theme-toggle-icon" title="Toggle Theme">
                    <i id="themeToggleIcon" class="fa-solid fa-circle-half-stroke"></i>
                </div>
                <% if (typeof relativePath !== 'undefined') { %>
                    <a href="/download/<%= relativePath %>" class="download-button download-icon" title="Download">
                        <i class="fa fa-download"></i>
                    </a>
                <% } %>
                <a href="https://github.com/tupakkatapa/coditon-md" class="src-button src-icon" title="Source Code">
                    <i class="fa-solid fa-link"></i>
                </a>
                <a href="/rss.xml" class="rss-button rss-icon" title="RSS Feed">
                    <i class="fa fa-rss"></i>
                </a>
            </div>
            <div class="social-links-bar">
              <% if (socialLinks && socialLinks.length > 0) { %>
                  <% socialLinks.forEach(function(link) { %>
                      <a href="<%= link.href %>" class="social-link">
                          <i class="fab <%= link.fab %>"></i>
                      </a>
                  <% }); %>
              <% } %>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            setupThemeToggle();
            setupSidebarToggle();
            setupSwipeGestures();
            setupInitialSidebarState();
            addCopyButtons();
            setupFolderToggles();
        });

        function setupThemeToggle() {
            const themeToggleIcon = document.getElementById("themeToggleIcon");
            const toggleTheme = () => {
                const isDarkTheme = document.body.classList.toggle("dark-theme");
                localStorage.setItem("theme", isDarkTheme ? "dark" : "light");
                document.getElementById("highlightjs-light").disabled = isDarkTheme;
                document.getElementById("highlightjs-dark").disabled = !isDarkTheme;
            };

            themeToggleIcon.addEventListener("click", toggleTheme);
            const preferredTheme = localStorage.getItem("theme") || "dark";
            document.body.classList.toggle("dark-theme", preferredTheme === "dark");
            document.getElementById("highlightjs-light").disabled = preferredTheme === "dark";
            document.getElementById("highlightjs-dark").disabled = preferredTheme !== "dark";
        }

        function setupSidebarToggle() {
            const collapseBtn = document.getElementById('collapseSidebar');
            const sidebar = document.querySelector('.sidebar');
            const container = document.querySelector('.container');

            const toggleSidebar = () => {
                const isCollapsed = sidebar.classList.toggle('collapsed');
                container.classList.toggle('sidebar-collapsed');
                document.body.classList.toggle('no-scroll', !isCollapsed);
                collapseBtn.style.transform = isCollapsed ? 'rotate(180deg)' : 'rotate(0deg)';
            };

            collapseBtn.addEventListener('click', toggleSidebar);
        }

        function setupSwipeGestures() {
            let touchStartX = 0;

            document.body.addEventListener('touchstart', (e) => touchStartX = e.changedTouches[0].screenX);
            document.body.addEventListener('touchend', (e) => {
                const touchEndX = e.changedTouches[0].screenX;
                const threshold = 75;
                const sidebar = document.querySelector('.sidebar');
                const container = document.querySelector('.container');
                const collapseBtn = document.getElementById('collapseSidebar');

                if (touchEndX > touchStartX + threshold && sidebar.classList.contains('collapsed')) {
                    sidebar.classList.remove('collapsed');
                    container.classList.remove('sidebar-collapsed');
                    collapseBtn.style.transform = 'rotate(0deg)';
                } else if (touchEndX < touchStartX - threshold && !sidebar.classList.contains('collapsed')) {
                    sidebar.classList.add('collapsed');
                    container.classList.add('sidebar-collapsed');
                    collapseBtn.style.transform = 'rotate(180deg)';
                }
            });
        }

        function setupInitialSidebarState() {
            const sidebar = document.querySelector('.sidebar');
            const container = document.querySelector('.container');
            const collapseBtn = document.getElementById('collapseSidebar');

            sidebar.classList.add('no-transition');
            container.classList.add('no-transition');

            if (window.innerWidth <= 768) {
                sidebar.classList.add('collapsed');
                container.classList.add('sidebar-collapsed');
                collapseBtn.style.transform = 'rotate(180deg)';
            } else {
                collapseBtn.style.transform = 'rotate(0deg)';
            }

            setTimeout(() => {
                sidebar.classList.remove('no-transition');
                container.classList.remove('no-transition');
            }, 50);
        }

        function addCopyButtons() {
            document.querySelectorAll('.markdown-body pre code').forEach(block => {
                const copyButton = document.createElement('button');
                copyButton.className = 'copy-button';
                copyButton.textContent = 'Copy';
                copyButton.addEventListener('click', () => {
                    navigator.clipboard.writeText(block.textContent).then(() => {
                        copyButton.textContent = 'Copied!';
                        setTimeout(() => copyButton.textContent = 'Copy', 2000);
                    });
                });

                const wrapper = document.createElement('div');
                wrapper.className = 'code-wrapper';
                block.parentNode.replaceChild(wrapper, block);
                wrapper.appendChild(block);
                wrapper.appendChild(copyButton);
            });
        }

        function setupFolderToggles() {
            const sidebar = document.querySelector('.sidebar');
            sidebar.classList.add('no-transition');

            document.querySelectorAll('.sidebar .folder > span').forEach((folderSpan, index) => {
                const listItem = folderSpan.parentElement;
                const sublist = listItem.querySelector('ul');
                const folderIcon = folderSpan.querySelector('i');
                const folderId = `folderState-${index}`;
                const storedState = localStorage.getItem(folderId) || 'closed';

                const setFolderState = (isOpen) => {
                    listItem.classList.toggle('open', isOpen);
                    sublist.style.maxHeight = isOpen ? `${sublist.scrollHeight}px` : 0;
                    folderIcon.classList.toggle('fa-folder-open', isOpen);
                    folderIcon.classList.toggle('fa-folder', !isOpen);
                    localStorage.setItem(folderId, isOpen ? 'open' : 'closed');
                };

                setFolderState(storedState === 'open');

                folderSpan.addEventListener('click', () => setFolderState(!listItem.classList.contains('open')));
            });

            setTimeout(() => sidebar.classList.remove('no-transition'), 50);
        }
    </script>
</body>

</html>
