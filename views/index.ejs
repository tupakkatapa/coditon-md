<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>

  <link rel="stylesheet" href="/base.css">
  <link rel="stylesheet" href="/sidebar.css">
  <link rel="stylesheet" href="/dark-theme.css">
  <link rel="stylesheet" href="/markdown.css">
  <link rel="stylesheet" href="/mobile.css">

  <link rel="preload" href="/profile-pic" as="image">
  <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  <link rel="stylesheet" id="highlightjs-light" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github.min.css" disabled>
  <link rel="stylesheet" id="highlightjs-dark" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github-dark.min.css">
  <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
  <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
</head>
<body class="dark-theme">
  <div class="container">
    <div class="sidebar-backdrop" id="sidebarBackdrop"></div>
    <nav class="sidebar" role="navigation" aria-label="Site navigation">
      <div class="sidebar-content">
        <div class="image-container">
          <% if (image) { %>
            <img src="/profile-pic" alt="Profile Image">
          <% } %>
        </div>
        <div class="sidebar-header">
          <h2>~ <%= name %></h2>
        </div>
        <div class="navigation-buttons">
          <%- folderStructure %>
        </div>
        <button class="arrow-btn" id="collapseSidebar" aria-label="Toggle sidebar">‚ü®</button>
      </div>
    </nav>
    <main class="main" role="main">
      <div id="file-content" class="markdown-body">
        <%- initialContent %>
        <% if (typeof relativePath !== 'undefined') { %>
          <a href="/download/<%= relativePath %>" class="download-button download-icon" title="Download">
            <i class="fa-solid fa-download"></i>
          </a>
        <% } %>
        <% if (sourceLink) { %>
        <a href="<%= sourceLink %>" class="src-button src-icon" title="Source Code">
          <i class="fa-solid fa-link"></i>
        </a>
        <% } %>
        <a href="/rss.xml" class="rss-button rss-icon" title="RSS Feed">
          <i class="fa-solid fa-rss"></i>
        </a>
        <a href="#" class="theme-toggle" id="themeToggleIcon" title="Toggle Theme" aria-label="Toggle between light and dark theme">
          <i class="fa-solid fa-circle-half-stroke"></i>
        </a>
      </div>
      <div class="social-links-bar">
        <% if (socialLinks && socialLinks.length > 0) { %>
          <% socialLinks.forEach(function(link) { %><a href="<%= link.href %>" class="social-link"><i class="fab <%= link.fab %>"></i></a><% }); %>
        <% } %>
      </div>
    </div>
  </div>

  <script>
    // Configuration
    const CONFIG = {
      SWIPE_THRESHOLD: 75,
      MOBILE_BREAKPOINT: 768,
      TRANSITION_DELAY: 50,
      COPY_BUTTON_RESET_DELAY: 2000,
      DEFAULT_THEME: 'dark'
    };

    document.addEventListener('DOMContentLoaded', () => {
      setupThemeToggle();
      setupSidebarToggle();
      setupSwipeGestures();
      setupInitialSidebarState();
      addCopyButtons();
      setupFolderToggles();
      setupKeyboardNavigation();
    });

    function setupThemeToggle() {
      const themeToggleIcon = document.getElementById("themeToggleIcon");
      const toggleTheme = () => {
        const isDarkTheme = document.body.classList.toggle("dark-theme");
        localStorage.setItem("theme", isDarkTheme ? "dark" : "light");
        document.getElementById("highlightjs-light").disabled = isDarkTheme;
        document.getElementById("highlightjs-dark").disabled = !isDarkTheme;
      };

      themeToggleIcon.addEventListener("click", (e) => {
        e.preventDefault();
        toggleTheme();
      });
      const storedTheme = localStorage.getItem("theme");
      const validThemes = ["dark", "light"];
      const preferredTheme = validThemes.includes(storedTheme) ? storedTheme : CONFIG.DEFAULT_THEME;
      const isDark = preferredTheme === "dark";
      
      // Body already has dark-theme class by default, only remove if light theme
      if (!isDark) {
        document.body.classList.remove("dark-theme");
      }
      
      document.getElementById("highlightjs-light").disabled = isDark;
      document.getElementById("highlightjs-dark").disabled = !isDark;
    }

    function setupSidebarToggle() {
      const collapseBtn = document.getElementById('collapseSidebar');
      const sidebar = document.querySelector('.sidebar');
      const container = document.querySelector('.container');
      const backdrop = document.getElementById('sidebarBackdrop');
      const isMobile = () => window.innerWidth <= CONFIG.MOBILE_BREAKPOINT;

      const toggleSidebar = () => {
        const isCollapsed = sidebar.classList.toggle('collapsed');
        
        if (isMobile()) {
          backdrop.classList.toggle('active', !isCollapsed);
          document.body.style.overflow = isCollapsed ? 'auto' : 'hidden';
        } else {
          container.classList.toggle('sidebar-collapsed', isCollapsed);
        }
        
        collapseBtn.style.transform = isCollapsed ? 'rotate(180deg)' : 'rotate(0deg)';
      };

      collapseBtn.addEventListener('click', toggleSidebar);
      backdrop.addEventListener('click', () => {
        if (!sidebar.classList.contains('collapsed')) {
          toggleSidebar();
        }
      });
    }

    function setupSwipeGestures() {
      let touchStartX = 0;
      document.body.addEventListener('touchstart', (e) => touchStartX = e.changedTouches[0].screenX);
      document.body.addEventListener('touchend', (e) => {
        const touchEndX = e.changedTouches[0].screenX;
        const threshold = CONFIG.SWIPE_THRESHOLD;
        const sidebar = document.querySelector('.sidebar');
        const container = document.querySelector('.container');
        const collapseBtn = document.getElementById('collapseSidebar');

        if (touchEndX > touchStartX + threshold && sidebar.classList.contains('collapsed')) {
          sidebar.classList.remove('collapsed');
          container.classList.remove('sidebar-collapsed');
          collapseBtn.style.transform = 'rotate(0deg)';
        } else if (touchEndX < touchStartX - threshold && !sidebar.classList.contains('collapsed')) {
          sidebar.classList.add('collapsed');
          container.classList.add('sidebar-collapsed');
          collapseBtn.style.transform = 'rotate(180deg)';
        }
      });
    }

    function setupInitialSidebarState() {
      const sidebar = document.querySelector('.sidebar');
      const container = document.querySelector('.container');
      const collapseBtn = document.getElementById('collapseSidebar');
      const isMobile = () => window.innerWidth <= CONFIG.MOBILE_BREAKPOINT;

      sidebar.classList.add('no-transition');
      container.classList.add('no-transition');

      if (isMobile()) {
        // On mobile, start with sidebar collapsed
        sidebar.classList.add('collapsed');
        collapseBtn.style.transform = 'rotate(180deg)';
      } else {
        sidebar.classList.remove('collapsed');
        container.classList.remove('sidebar-collapsed');
        collapseBtn.style.transform = 'rotate(0deg)';
      }

      setTimeout(() => {
        sidebar.classList.remove('no-transition');
        container.classList.remove('no-transition');
      }, CONFIG.TRANSITION_DELAY);
    }

    function addCopyButtons() {
      document.querySelectorAll('.markdown-body pre code').forEach(block => {
        const copyButton = document.createElement('button');
        copyButton.className = 'copy-button';
        copyButton.textContent = 'Copy';
        copyButton.addEventListener('click', () => {
          navigator.clipboard.writeText(block.textContent).then(() => {
            copyButton.textContent = 'Copied!';
            setTimeout(() => copyButton.textContent = 'Copy', CONFIG.COPY_BUTTON_RESET_DELAY);
          });
        });

        const wrapper = document.createElement('div');
        wrapper.className = 'code-wrapper';
        block.parentNode.replaceChild(wrapper, block);
        wrapper.appendChild(block);
        wrapper.appendChild(copyButton);
      });
    }

    function setupFolderToggles() {
      const sidebar = document.querySelector('.sidebar');
      sidebar.classList.add('no-transition');

      document.querySelectorAll('.sidebar .folder > span').forEach((folderSpan, index) => {
        const listItem = folderSpan.parentElement;
        const sublist = listItem.querySelector('ul');
        const folderIcon = folderSpan.querySelector('i');
        const folderId = `folderState-${index}`;
        const storedState = localStorage.getItem(folderId) || 'closed';

        const setFolderState = (isOpen) => {
          listItem.classList.toggle('open', isOpen);
          sublist.style.maxHeight = isOpen ? `${sublist.scrollHeight}px` : 0;
          folderIcon.classList.toggle('fa-folder-open', isOpen);
          folderIcon.classList.toggle('fa-folder', !isOpen);
          localStorage.setItem(folderId, isOpen ? 'open' : 'closed');
        };

        setFolderState(storedState === 'open');

        folderSpan.addEventListener('click', () => setFolderState(!listItem.classList.contains('open')));
      });

      setTimeout(() => sidebar.classList.remove('no-transition'), CONFIG.TRANSITION_DELAY);
    }


    function setupKeyboardNavigation() {
      document.addEventListener('keydown', (e) => {
        // Ignore if user is typing in an input
        if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') return;
        
        switch (e.key) {
          case 't':
          case 'T':
            e.preventDefault();
            document.getElementById('themeToggleIcon').click();
            break;
          case 'Escape':
            const sidebar = document.querySelector('.sidebar');
            if (!sidebar.classList.contains('collapsed')) {
              document.getElementById('collapseSidebar').click();
            }
            break;
          case 'Home':
            e.preventDefault();
            document.querySelector('.main').scrollTo({ top: 0, behavior: 'smooth' });
            break;
          case 'End':
            e.preventDefault();
            const main = document.querySelector('.main');
            main.scrollTo({ top: main.scrollHeight, behavior: 'smooth' });
            break;
        }
      });
    }
  </script>
</body>
</html>
